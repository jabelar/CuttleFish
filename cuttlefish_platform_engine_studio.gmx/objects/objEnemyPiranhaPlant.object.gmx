<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPiranhaPlant</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>objParentEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// set up decision alarm
hiding = false ;
alarm[0] = 1 * ENEMY_DECISION_FREQ * ROOM_SPEED ;
// assumes that the object's depth is behind any pipe or whatever
// so lowering the sprite will hide it

my_speed_factor = ENEMY_SPEED_FACTOR ;
my_gravity_factor = 1 ;
my_original_gravity_factor = my_gravity_factor ;

state = STANDING ;
facing = RIGHT ;
xscale = 1 ; // use this instead of image_xscale to avoid flipping collision mask
yscale = 1 ;
artificial_intelligence = ENEMY_AI_DUMB_PREDICTABLE ;
sound_death = soundStomp ;

// initialize line of sight variables, used in some enemy AI
sight_enabled = false ;
last_seen_x = x ;
last_seen_y = y ;
squashable = false ; // whether can squash like a goomba in Super Mario games
convertible = false ; // whether converts to another object when killed (like Koopas turning into shells)
freezable = true ;
freeze_object_index = objFrozenPiranhaPlant ;
worth = 100 ; // number of points its worth for killing
bounce = false ;
running_enabled = false ; // no sonic style running
max_fall_speed = MAX_FALL_SPEED ; // may change this if equipped with something like parachutes
allow_parachute = false ;
parachute_deployed = false ;

character_is_over = NOTHING ;
character_is_above = NOTHING ;
character_is_below = NOTHING ;
character_is_right_of = NOTHING ;
character_is_left_of = NOTHING ;
platform_id = 0 ; // this is id for instance of a moving platform under character
vert_speed = 0; // this is used for better control than built-in vspeed
diggable_left_id = noone ;
diggable_right_id = noone ;
trapped_object_index = objEnemyGoombaTrapped ;
escape_traps_enabled = false ;

// initialize AI motion control variables
scrInitializeInputVariables() ;

// map sprites
sprite_standing = sprPiranhaPlant ;
sprite_standing = sprPiranhaPlant ;
sprite_walking = sprPiranhaPlant ;
sprite_jumping = sprPiranhaPlant ;
sprite_falling = sprPiranhaPlant ;
sprite_ducking = sprPiranhaPlant ;
sprite_climbing = sprPiranhaPlant ;
sprite_jumping_powered = sprPiranhaPlant ;
sprite_super_jumping = sprPiranhaPlant ;
sprite_double_jumping = sprPiranhaPlant ;
sprite_dying = sprPiranhaPlant ;
sprite_shielding = sprPiranhaPlant ;
sprite_squashable = sprPiranhaPlant ; // if squashable need to map this sprite for better visual effect

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// this alarm is used for the emergence of the plant
// the actual code is in the step event</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hiding then
    {
    if alarm[0] &lt;= 0 then // time to come out of hiding
        {
        hiding = false ;
        // set alarm until next hiding
        alarm[0] = 2 * ENEMY_DECISION_FREQ * ROOM_SPEED ;
        }
    if y &lt; ystart + sprite_height then y += 0.5 ; // hide slowly
    }
else // not hiding
    {
    if alarm[0] &lt;= 0 then 
        {
        hiding = true ;
        // set alarm until next come out of hiding
        alarm[0] = 3 * ENEMY_DECISION_FREQ * ROOM_SPEED ;
        }
    if y &gt; ystart then y -= 0.5 ; // emerge slowly
    }
if state = DYING then
    {
    scrProcessCharDying() ; 
    }</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
