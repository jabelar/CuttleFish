<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1) ;
draw_set_font(fontSuperMarioScore22) ;
draw_set_halign(fa_right) ;
draw_set_valign(fa_top) ;
draw_set_color(c_black) ;
if global.current_player = PLAYER1 then
    {
    draw_text(view_xview[0]+150, view_yview[0]+5, "PLAYER 1") ;
    }
else // must be player 2
    {
    draw_text(view_xview[0]+150, view_yview[0]+5, "PLAYER 2") ;
    }

// need to pad out score string to 5 places
var my_score ;
my_score = global.player_score[global.current_player] ;
score_string = string(my_score) ;
if my_score &lt; 10000 then score_string = "0" + score_string ;
if my_score &lt; 1000 then score_string = "0" + score_string ;
if my_score &lt; 100 then score_string = "0" + score_string ;
if my_score &lt; 10 then score_string = "0" + score_string ;
// now draw it
draw_text(view_xview[view_current]+150, view_yview[view_current]+30, score_string) ;

draw_set_halign(fa_center);
draw_text(view_xview[0]+350, view_yview[0]+5, "LIVES") ;
draw_text(view_xview[0]+350, view_yview[0]+30, string(global.number_of_lives[global.current_player])) ;
draw_set_halign(fa_right) ;

draw_sprite_ext(sprCoin, 0, view_xview[view_current]+ 160, view_yview[view_current]+14, 2, 2, 0, c_white, 1) ;
// need to pad out count of coins to two places
coin_string = string(global.coins_collected[global.current_player]) ;
if global.coins_collected[global.current_player] &lt; 10 then coin_string = "0"+coin_string ;
coin_string = "x "+coin_string ;
draw_text(view_xview[view_current]+275, view_yview[view_current]+30, coin_string) ;

draw_text(view_xview[view_current]+530, view_yview[view_current]+5, "TIME") ;
// if timer in expiry warning, then color red
if global.room_time_warning then draw_set_color(c_red) ;
minutes_string = string(global.room_minutes) + ":" ;
// need to pad out seconds if less than 10
seconds_string = string(global.room_seconds) ;
if global.room_seconds &lt; 10 then seconds_string = "0" + seconds_string ;
time_string = minutes_string + seconds_string ;
if object_exists(objRoomTimerController) then
    {
    draw_text(view_xview[view_current]+530, view_yview[view_current]+30, time_string) ;
    }</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
