<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKoopaShell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objParentEnemyWeapon</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// object will obey physics, so intialize related variables
state = STANDING ;
// don't set facing variable, as this will be passed to it when convertible enemy dies (see DYING state script)
artificial_intelligence = ENEMY_AI_DUMB_PREDICTABLE;
bounce = false ;
my_speed_factor = 2 ; // these should be fast
my_gravity_factor = 1 ;

xscale = 1 ; // use this instead of image_xscale to avoid flipping collision mask
yscale = 1 ;
running_enabled = false ;


// initialize surrounding variables
character_is_over = NOTHING ;
character_is_above = NOTHING ;
character_is_below = NOTHING ;
character_is_right_of = NOTHING ;
character_is_left_of = NOTHING ;
platform_id = 0 ; // this is id for instance of a moving platform under character
vert_speed = 0; // this is used for better control than built-in vspeed
max_fall_speed = MAX_FALL_SPEED ; // may change this if equipped with something like parachutes
allow_parachute = false ;
parachute_deployed = false ;

// initial input variables, since some AI associated with any moving object
scrInitializeInputVariables() ;

// map sprites
// only possible states are standing, walking and falling
sprite_standing = sprKoopaShell ;
sprite_falling = sprKoopaShell ;
sprite_walking = sprKoopaShell ;

// since koopa shell also acts as a player weapon (kills both enemies and players)
// create a player weapon object that will track
tracking_id = instance_create(x, y, objPlayerWeaponKoopaShell) ;
tracking_id.visible = false ; // no need to see it though
tracking_id.created_by_id = id ; // remember who created the tracking object

// create a short time delay before it becomes lethal to players
// this alarm will be checked in the enemy weapon step processing script
alarm[4] = room_speed * 0.5 ; // half second
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scrProcessKoopaShellStep</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objParentHazard">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, xscale, yscale, 0, c_white, 1) ;</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
