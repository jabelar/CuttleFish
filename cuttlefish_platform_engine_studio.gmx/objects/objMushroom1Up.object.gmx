<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMushroom1Up</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// object will obey physics, so intialize related variables
state = JUMPING ; // starts as a sort of lobbed throw
facing = RIGHT ;
bounce = false ; // this is for super bounce enabling, but will have it's own auto-bounce effect
my_speed_factor = 0.5 ;
my_gravity_factor = 1 ;
my_original_gravity_factor = my_gravity_factor ;

// has a dumb sort of AI that reverses when hits obstacles
artificial_intelligence = ENEMY_AI_DUMB_PREDICTABLE ;
xscale = 1 ; // use this instead of image_xscale to avoid flipping collision mask
yscale = 1 ;

running_enabled = false ;


// initialize surrounding variables
character_is_over = NOTHING ;
character_is_above = NOTHING ;
character_is_below = NOTHING ;
character_is_right_of = NOTHING ;
character_is_left_of = NOTHING ;
platform_id = 0 ; // this is id for instance of a moving platform under character
vert_speed = INITIAL_FIRE_FLOWER_BOUNCE; // this is used for better control than built-in vspeed
max_fall_speed = MAX_FALL_SPEED ; // may change this if equipped with something like parachutes
allow_parachute = false ;
parachute_deployed = false ;

// initial input variables, even though they won't really be used for physical objects
scrInitializeInputVariables() ;

// map sprites
// only possible states are standing and falling
sprite_standing = sprMushroom1Up ;
sprite_falling = sprMushroom1Up ;
sprite_walking = sprMushroom1Up ;
sprite_jumping = sprMushroom1Up ;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrInitializeInputVariables() ;

// movement
scrProcessSurroundings() ;

// turn around if right next to an obstacle (which will happen due to move_contact_solid() in previous step)
if facing = LEFT then
    {
    if character_is_right_of = SOLID or x &lt;= 0 then // turn around also if outside room
        {
        kRight = true ;
        }
    else // keep going
        {
        kLeft = true ;
        }
    }
if facing = RIGHT then
    {
    if character_is_left_of = SOLID or x &gt;= room_width then // turn around
        {
        kLeft = true ;
        }
    else
        {
        kRight = true ;
        }
    }


// automatically "jump" if on solid
if not character_is_above = NOTHING and character_is_over = NOTHING and character_is_below = NOTHING then // okay to bounce
    {
    state = JUMPING ;
    vert_speed = INITIAL_FIRE_FLOWER_BOUNCE ;
    }
    
// now process state transitions and physics
scrProcessStatePhysics() ;

// update sprite direction
scrUpdateSpriteDirection() ;

// check for outside bottom of room
if y &gt; room_height then
    {
    instance_destroy() ; // destroy after it leaves room at bottom
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objParentHazard">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lives += 1 ;
instance_destroy() ;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, xscale, yscale, 0, c_white, 1) ;</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
