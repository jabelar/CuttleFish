<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPokeyStanding</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// if entered room via a portal, then process that reference
if global.entered_by_portal then
    {
    x = global.portal_entry_x ;
    y = global.portal_entry_y ;
    }
global.entered_by_portal = false ;
state = STANDING ;
my_speed_factor = 1 ;
my_gravity_factor = 1 ;
facing = RIGHT ;
xscale = 1 ; // use this instead of image_xscale to avoid flipping collision mask
yscale = 1 ;
bounce = false ;
trail_enabled = ALLOW_SONIC_TRAIL_EFFECT ;
running_enabled = ALLOW_RUNNING ; // can run if allowed
max_fall_speed = MAX_FALL_SPEED ; // may change this if equipped with something like parachutes
allow_parachute = ALLOW_PARACHUTE ;
parachute_deployed = false ;
shield_deployed = false ;
shield_strength = 100 ;
shield_use_rate = 100 / (room_speed * 2 ) ; //use up shield in 2 seconds
shield_regen_rate = 100 / (room_speed * 5 ) ; // full regen in 5 seconds
shield_min_regen = true ; // used to force wait between shield uses until regen'ed to min level
run_delay = RUN_DELAY * room_speed ; // time before continuous walking shifts to running
alarm[0] = -1 ; // alarm 0 is alarm for running
diggable_left_id = noone ;
diggable_right_id = noone ;
obstacle_id = noone ;

// initialize input variables
scrInitializeInputVariables() ;

// initialize joystick variables used to detect "pressed" type events on joystick
joystick_left = false ;
joystick_right = false ;
joystick_up = false ;
joystick_down = false ;
joystick_jump = false ;
joystick_weapon = false ;
joystick_switch_weapon = false ;
joystick_shield = false ;
joystick_dig_left = false ;
joystick_dig_right = false ;

// initial surrounding state variables
character_is_over = NOTHING ;
character_is_above = NOTHING ;
character_is_below = NOTHING ;
character_is_right_of = NOTHING ;
character_is_left_of = NOTHING ;

diggable_id = 0 ;
platform_id = 0 ; // this is id for instance of a moving platform under character
vert_speed = 0; // this is used for better control than built-in vspeed

// map the characteristics of the player character, assumes that global.player_character_type is assigned at least to a default type
scrMapPlayerCharacter() ;

// initialize sonic blur effect array
for (i=0; i&lt;TRAIL_SIZE; i+=1)
    {
    trail_x[i] = x ;
    trail_y[i] = y ;
    }</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scrProcessPlayerrStepEvent</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objParentCoin">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scrCollideWithCoin</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objParentEnemy">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scrCollideWithEnemy</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objParentPortal">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scrCollideWithPortal</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objParentFood">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scrCollideWithFood</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objParentHazard">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scrCollideWithHazard</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw trail if enabled
if trail_enabled and (state = RUNNING or state = SUPER_JUMPING) then
    {
    for (i=0; i&lt;TRAIL_SIZE; i+=1)
        {
        draw_sprite_ext(sprite_index, image_index, trail_x[i], trail_y[i], xscale, yscale, 0, c_white, image_alpha*(TRAIL_SIZE-i)/TRAIL_SIZE) ;
        }
    }
else // no trail
    {
    draw_sprite_ext(sprite_index, image_index, x, y, xscale, yscale, 0, c_white, image_alpha) ;
    }
    
// draw parachute if deployed
if parachute_deployed then
    {
    draw_sprite_ext(sprParachute, 0, x, y - sprite_yoffset, xscale, 1, 0, c_white, image_alpha) ; // parachute origin is at bottom
    }

// draw shield if deployed
if shield_deployed then
    {
    draw_sprite_ext(sprite_shielding, 0, x, y, xscale, 1, 0, c_white, image_alpha) ;
    }
        
// draw weapon if appropriate
if state != DUCKING then // don't show weapon when ducking
    {
    if current_weapon_type = PLAYER_WEAPON_LASER then
        {
        draw_sprite_ext(weapon_projectile_wield_sprite_index, 0, x, y, xscale, yscale, 0, c_white, image_alpha) ;
        }
    if current_weapon_type = PLAYER_WEAPON_SWORD and not weapon_swinging then // will be drawn by weapon object when swinging
        {
        draw_sprite_ext(weapon_melee_wield_sprite_index, 0, x, y, xscale, yscale, 0, c_white, image_alpha) ;
        }
    if current_weapon_type = PLAYER_WEAPON_BOMB then
        {
        draw_sprite_ext(weapon_bomb_wield_sprite_index, 0, x, y, xscale, yscale, 0, c_white, image_alpha) ;
        }
    if current_weapon_type = PLAYER_WEAPON_FIRE_FLOWER then
        {
        draw_sprite_ext(weapon_fire_flower_wield_sprite_index, 0, x, y, xscale, yscale, 0, c_white, image_alpha) ;
        }
    }
    </string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
